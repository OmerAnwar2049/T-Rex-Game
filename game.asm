
Draw macro color,y1,x1,y2,x2

	mov ah,6      ;routine to move number of lines
	mov al,00h    ;number of lines
	mov bh,color
	mov ch,y1
	mov cl,x1	
	mov dh,y2	
	mov dl,x2
	int 10h	

endm

DrawPixel macro X,Y,Color

	mov ah,0ch
	mov al,Color
	mov bx,0
	mov cx,X
	mov dx,Y
	int 10h

endm

pushRegisters MACRO
	push ax
	push bx
	push cx
	push dx
	push si
ENDM


popRegisters MACRO
	pop si
	pop dx
	pop cx
	pop bx
	pop ax
ENDM

.model small
.stack 100h
.386
.data

;;SCORE VARIABLE
Score dw 0

SARRAY db 5 dup('0')
SARRAYSIZE DB 5

;CACTUS VARIABLES
cacvertx dw 150,254	
cacverty dw 175
cacmidx dw 152,256
cacmidy dw 167
cacleftx dw 142,246
cacrightx dw 158,262
cacsidey dw 168

;MISSILE
UFOx dw 280
UFOy dw 110
boolUFO db 0

;;TIME VARIABLE
seconds db 0
minutes db 0
hours db 0

;;FOR MOUSE COORDINATES
mrow db ?
mcol db ? 


;' MENU STRINGS ;;
name1 db "T-REX GAME$"
name2 db "PLAY$"
name3 db "INSTRUCTIONS$"
name4 db "EXIT$"
name5 db "BACK$"
name6 db "SCORE:$"
name7 db "LIVES:$"
pos db ?
height db ?

boom db "BOOM$"
ouch db "OUCH$"
gameoverr db "GAMEOVER$"
scoree db "YOUR SCORE: $"
tempsx db ?
tempsy db ?

;;FOR FILE HANDLING
openError db "Error Opening File$";;Open error message
filename db "data.txt",0          ;;Name of file
errorCaption db "Error$"
successCaption db "Done$"
errorRead db "Unable to read from file$";;Read Error
fhandle dw ?		    ;;File Handle
bytesRead dw ?		    ;;Number of bytes read	
bytesBuffer db 206 dup('$')  ;;Buffer to read text

;for highscore
boolh1 db 0
highscore dw 0
DELIMETER db '$'
highscoree db "HIGH SCORE: $"
FILE db "score.txt",0
err db "ERROR ! FILE DOES NOT EXIST$"
HANDLE dw ?
BUFFER db 2 dup(0)

year dw ?
month db ?
dayy db ?

min db ?
sec db ?
hour db ?

colon db ':'
SPACE db ' '
SLASH db '/'

;obstacle counter
obscount db 1

;extralives counter
extralives dw 0
Displayheart db 0
extralivex dw 250
extralivey dw 150

;;;Playscreen Variables
Cloud1_X dw 30
Cloud2_X dw 140
Cloud3_X dw 220

Sun_X dw 100
Heart_Array db 55,75,95,115,135
Lives db 5

;;Player Variables
DinoX WORD 0
DinoY WORD 0
Up db 0
Down db 0



;;;NAME
Disp db 'Please Enter Your Name?$';
PlayerName db 20 dup('$')



	comment @
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		@

	 xSizeH dw 20	
 	 ySizeH dw 19	
	  
	Heart2	DB 03h,03h,03h,03h,03h,03h,00H,00h,03h,03h,03h,03h,03h,00h,00h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,00h,04H,04h,00h,03h,03h,03h,00h,04h,04h,00h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,00h,04h,04h,04h,04h,00h,03h,00h,04h,04h,04h,04h,00h,03h,03h,03h
		DB 03h,03h,03h,00h,04h,04h,04h,04h,04h,04h,00h,04h,04h,04h,04h,04h,04h,00h,03h,03h
		DB 03h,03h,00h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h,03h
		DB 03h,00h,04h,04h,04h,04h,0Fh,0Fh,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h
		DB 03h,00h,04h,04h,04h,04h,04h,0Fh,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h
		DB 03h,00h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h
		DB 03h,00h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h
		DB 03h,00h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h
		DB 03h,03h,00h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h,03h
		DB 03h,03h,03h,00h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h,03h,03h
		DB 03h,03h,03h,03h,00h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,04h,00h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,00h,04H,04h,04h,04h,04h,04h,04h,04h,04h,00h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,00H,04h,04h,04h,04h,04h,04h,04h,00h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,00h,04h,04h,04h,04h,04h,00h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,00h,04h,04h,04h,00h,03h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,00h,04h,00h,03h,03h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,00h,03h,03h,03h,03h,03h,03h,03h,03h,03h


		Heart3	DB 0,0,0,0,0,0,00H,00h,0,0,0,0,0,00h,00h,0,0,0,0,0
		DB 0,0,0,0,0,00h,2,2,00h,0,0,0,00h,2,2,00h,0,0,0,0
		DB 0,0,0,0,00h,2,2,2,2,00h,0,00h,2,2,2,2,00h,0,0,0
		DB 0,0,0,00h,2,2,2,2,2,2,00h,2,2,2,2,2,2,00h,0,0
		DB 0,0,00h,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,00h,0
		DB 0,00h,2,2,2,2,0Fh,0Fh,2,2,2,2,2,2,2,2,2,2,2,00h
		DB 0,00h,2,2,2,2,2,0Fh,2,2,2,2,2,2,2,2,2,2,2,00h
		DB 0,00h,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,00h
		DB 0,00h,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,00h
		DB 0,00h,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,00h
		DB 0,0,00h,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,00h,0
		DB 0,0,0,00h,2,2,2,2,2,2,2,2,2,2,2,2,2,00h,0,0
		DB 0,0,0,0,00h,2,2,2,2,2,2,2,2,2,2,2,00h,0,0,0
		DB 0,0,0,0,0,00h,2,2,2,2,2,2,2,2,2,00h,0,0,0,0
		DB 0,0,0,0,0,0,00H,2,2,2,2,2,2,2,00h,0,0,0,0,0
		DB 0,0,0,0,0,0,0,00h,2,2,2,2,2,00h,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,00h,2,2,2,00h,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,00h,2,00h,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,00h,0,0,0,0,0,0,0,0,0


		


	 xSizeC dw 47
 	 ySizeC dw 17	

		
	Cloud	DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,00H,00h,00h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,03h,03h,00h,00h,03h,03h,03h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,00h,0Fh,0Fh,00h,03h,03h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,00h,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,03H,00h,00h,00h,03h,03h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h
		DB 03h,03h,03h,03h,03h,03h,00H,0Fh,0Fh,0Fh,00h,03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,00h,03h,03h
		DB 03h,03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h
		DB 03h,03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h,03h
		DB 03h,03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h
		DB 03h,03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h,03h
		DB 03h,00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h
		DB 00h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,00h
		DB 00h,00h,00h,00h,00h,00h,00H,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00H,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h


Cloud2	DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,00H,00h,00h,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,5,5,5,5,00h,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,5,5,5,5,5,5,00h,0,0,0,0,0,00h,00h,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,5,5,5,5,5,5,5,5,00h,0,0,0,00h,5,5,00h,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,5,5,5,5,5,5,5,5,5,5,00h,0,00h,5,5,5,5,00h,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,00h,5,5,5,5,5,5,00h,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,5,5,5,5,5,5,00h,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,0,0,0,0
		DB 0,0,0,0,0,0,0,00h,00h,00h,0,0,0,0,0,0,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,0,0,0
		DB 0,0,0,0,0,0,00H,5,5,5,00h,0,0,0,0,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,00h,0,0
		DB 0,0,0,0,0,00h,5,5,5,5,5,00h,0,0,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,0,0
		DB 0,0,0,0,00h,5,5,5,5,5,5,5,00h,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,0,0
		DB 0,0,0,00h,5,5,5,5,5,5,5,5,5,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,0
		DB 0,0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h,0
		DB 0,00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h
		DB 00h,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,00h
		DB 00h,00h,00h,00h,00h,00h,00H,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00H,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h






		 xCoordD dw 20	;;Starting X-Axis of Dino
		 yCoordD dw 138	;;Starting Y-Axis of Dino
		 xSizeD dw 36 	;Horizontal Length of Dinosaur in X-Axis
		 ySizeD dw 38	;Vertical Length of Dinosaur in Y-Axis

		 Dbool db 0


	dino    DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,4,4,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,4,4,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3
		DB 0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3
		DB 0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,3
		DB 0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 3,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 3,3,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3


	  dino2 DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,4,4,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,4,4,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3
		DB 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3
		DB 0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3
		DB 0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3
		DB 0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,3,0,0,3,3,3,3,3,3,3
		DB 0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,3,0,0,3,3,3,3,3,3,3
		DB 0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3,0,0,3,3,3,3,3,3,3
		DB 0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,3,3,3,3,3
		DB 3,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,3,3,3,3,3
		DB 3,3,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3







		dinoN    DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,4,4,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,4,4,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
		DB 15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0
		DB 15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,0,0
		DB 15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 0,15,15,15,15,15,15,15,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 0,0,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0


	  dino2N DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,4,4,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,4,4,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
		DB 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
		DB 15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0
		DB 15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0
		DB 15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,0,15,15,0,0,0,0,0,0,0
		DB 15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,15,15,0,0,0,0,0,0,0
		DB 15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,0,15,15,0,0,0,0,0,0,0
		DB 15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,15,15,0,0,0,0,0,0,0
		DB 0,15,15,15,15,15,15,15,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,0,15,15,0,0,0,0,0,0,0
		DB 0,0,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0







sunX dw 100
sunY dw 190
  
 xSizeS dw 29 	;Horizontal Length of Dinosaur in X-Axis
 ySizeS dw 37 ;Vertical Length of Dinosaur in Y-Axis
 day db 1
 night db 0


 NightCycle db 0


sun DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,3,3,3,3,3,14,14,14,14,3,3,3,3,3,3,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3
DB 3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3
DB 3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3
DB 3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3
DB 3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3
DB 3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3
DB 3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3
DB 3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3
DB 3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3
DB 3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3
DB 3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3
DB 3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3
DB 3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3
DB 3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3
DB 3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3,3,3,3
DB 3,3,3,3,3,3,3,3,3,3,3,14,14,14,14,14,14,14,3,3,3,3,3,3,3,3,3,3,3


moon DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0
DB 0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0
DB 0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0
DB 0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0
DB 0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0
DB 0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0
DB 0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0
DB 0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0
DB 0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0
DB 0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0
DB 0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0
DB 0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0
DB 0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0
DB 0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0
DB 0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0,0,0
DB 0,0,0,0,0,0,0,0,0,0,0,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0,0,0,0,0,0,0,0,0,0,0




 xCoordDB dw 20	;;Starting X-Axis of Dino
 yCoordDB dw 152	;;Starting Y-Axis of Dino
 xSizeDB dw 39 	;Horizontal Length of Dinosaur in X-Axis
 ySizeDB dw 23	;Vertical Length of Dinosaur in Y-Axis

 BoolBend db 0
 BoolTime db 0
   
   	   dino3 DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,3,3
		DB 3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,4,4,0,0,0,0,0,0,0,0,3
		DB 3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,4,4,0,0,0,0,0,0,0,0,3
		DB 3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 3,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3
		DB 3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3
		DB 3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3
		DB 3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3
		DB 3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3
		DB 3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3
		DB 3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,0,3,3,3,0,0,0,0,3,3,3,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,3,3,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		DB 3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,3,3,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3




	 dino3N DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,0,0
		DB 0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,4,4,15,15,15,15,15,15,15,15,0
		DB 0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,4,4,15,15,15,15,15,15,15,15,0
		DB 0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
		DB 0,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0
		DB 0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0
		DB 0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
		DB 0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0
		DB 0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
		DB 0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
		DB 0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,15,0,0,0,15,15,15,15,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		DB 0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0








		 xCoordW dw 50	;;Starting X-Axis of Dino
		 xSizeW dw 46	;Horizontal Length of Dinosaur in X-Axis
		 ySizeW dw 22 ;Vertical Length of Dinosaur in Y-Axis
   

  	worm 	DB 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
		DB 0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,2
		DB 2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,2,2
		DB 2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,2,2,2
		DB 2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,0,2,2,2,2,2,2,2,2
		DB 2,2,2,2,0,2,0,0,0,0,2,2,2,2,0,0,2,2,2,2,2,0,0,2,2,2,0,0,2,2,0,0,2,2,2,0,0,2,2,2,2,2,2,2,2,2
		DB 2,2,2,2,2,0,0,0,0,0,0,2,2,0,0,0,2,2,2,2,0,0,0,2,2,0,0,0,2,0,0,0,2,2,0,0,0,2,2,2,2,2,2,2,2,2
		DB 2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0
		DB 6,6,6,6,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,6,6,6
		DB 6,6,6,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,6,6,6,6
		DB 6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6
		DB 6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6
		DB 6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6
		DB 6,6,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6
		DB 6,6,6,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,6,6,6,6
		DB 6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,0,6,6,6
		DB 6,6,6,6,6,0,0,0,0,0,0,6,6,0,0,0,6,6,6,6,0,0,0,6,6,0,0,0,6,0,0,0,6,6,0,0,0,6,6,6,6,6,6,0,0,0
		DB 6,6,6,6,0,6,0,0,0,0,6,6,6,6,0,0,6,6,6,6,6,0,0,6,6,6,0,0,6,6,0,0,6,6,6,0,0,6,6,6,6,6,6,6,6,6
		DB 6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,0,6,6,6,6,0,6,6,6,0,6,6,6,6,0,6,6,6,6,6,6,6,6
		DB 6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,0,6,6,6,6,0,6,6,6,0,6,6,6,6,0,6,6,6,6,6,6,6
		DB 6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,0,6,6,6,6,0,6,6,6,0,6,6,6,6,0,6,6,6,6,6,6
		DB 0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,0,6,6,6,6,0,6,6,6,0,6,6,6,6,0,6,6,6,6,6






.code

VideoMode proc uses ax

	mov ah,00h
	mov al,13h
	int 10h

	ret
VideoMode endp

getdate proc

	mov ah,2ah
	int 21h

	mov dayy,dl
	mov month,dh
	mov year,cx

	ret

getdate endp

gettime proc

	mov ah,2ch
	int 21h

	mov hour,ch
	mov min,cl
	mov sec,dh

	ret

gettime endp

checkhighscore proc

	mov ah,3dh
	lea dx,FILE
	mov al,0
	int 21h
	mov HANDLE,ax
	jc ERROR
	jmp READFILE

	ERROR:

		mov dx,offset err
		mov ah,9
		int 21h
		.exit

	READFILE:

	readd:	
	
		mov bx,HANDLE
		mov dx,offset BUFFER
		mov cx,1
		mov ah,3fh
		int 21h
		jc ERROR

		mov si,offset BUFFER
		mov ax,[si]
		cmp ax,' '
		je termreadd

		mov al,boolh1
		cmp al,0
		jne seconddigit
		mov boolh1,1

		mov ax,[si]
		sub ax,48
		mov highscore,ax
		jmp readd

		seconddigit:

			mov ax,highscore
			mov bl,10
			mul bl
			mov bx,[si]
			sub bx,48
			add ax,bx
			mov highscore,ax
	jmp readd

	termreadd:

		;closing file
		mov ah,3eh
		mov bx,HANDLE
		int 21h
		jc ERROR

		mov ax,score

		.IF(ax > highscore)

			;reopening file
			mov ah,3dh
			lea dx,FILE
			mov al,1
			int 21h
			mov HANDLE,ax
			jc ERROR

			mov ax,score
			mov highscore,ax

			;writing highscore
			.IF(score > 99)

				mov ax,highscore
				mov bl,100
				div bl

				push ax
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				add BUFFER[0],48
				mov dx,offset BUFFER
				int 21h
				pop ax

				mov al,ah
				mov ah,0
				mov bl,10
				div bl

				push ax
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				add BUFFER[0],48
				mov dx,offset BUFFER
				int 21h
				pop ax

				mov BUFFER[0],ah
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				add BUFFER[0],48
				mov dx,offset BUFFER
				int 21h


			.ELSEIF ( score > 9 )

				mov ax,highscore
				mov bl,10
				div bl

				push ax
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				add BUFFER[0],48
				mov dx,offset BUFFER
				int 21h
				pop ax

				mov BUFFER[0],ah
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				add BUFFER[0],48
				mov dx,offset BUFFER
				int 21h

			.ELSE

				mov ax,highscore
				mov bl,10
				div bl
				mov BUFFER[0],ah

				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				add BUFFER[0],48
				mov dx,offset BUFFER
				int 21h

			.ENDIF


			call gettime

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset SPACE
			int 21h

			mov ah,0
			mov al,hour
			cmp al,9
			jg hr

			add al,48
			mov BUFFER[0],al
			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset BUFFER
			int 21h

			jmp termhr
			
			hr:

				mov bl,10
				div bl
				push ax

				add al,48
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

				pop ax

				add ah,48
				mov BUFFER[0],ah
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

			termhr:

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset COLON
			int 21h

			;min
			mov ah,0
			mov al,min
			cmp al,9
			jg mr

			add al,48
			mov BUFFER[0],al
			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset BUFFER
			int 21h

			jmp termmr
			
			mr:

				mov bl,10
				div bl
				push ax

				add al,48
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

				pop ax

				add ah,48
				mov BUFFER[0],ah
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

			termmr:

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset COLON
			int 21h

			;sec
			mov ah,0
			mov al,sec
			cmp al,9
			jg sr

			add al,48
			mov BUFFER[0],al
			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset BUFFER
			int 21h

			jmp termsr
			
			sr:

				mov bl,10
				div bl
				push ax

				add al,48
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

				pop ax

				add ah,48
				mov BUFFER[0],ah
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

			termsr:

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset SPACE
			int 21h			

			call getdate

			mov ah,0
			mov al,dayy
			cmp al,9
			jg dr

			add al,48
			mov BUFFER[0],al
			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset BUFFER
			int 21h

			jmp termdr
			
			dr:

				mov bl,10
				div bl
				push ax

				add al,48
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

				pop ax

				add ah,48
				mov BUFFER[0],ah
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

			termdr:

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset SLASH
			int 21h

			;month
			mov ah,0
			mov al,month
			cmp al,9
			jg mmr

			add al,48
			mov BUFFER[0],al
			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset BUFFER
			int 21h

			jmp termmmr
			
			mmr:

				mov bl,10
				div bl
				push ax

				add al,48
				mov BUFFER[0],al
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

				pop ax

				add ah,48
				mov BUFFER[0],ah
				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER
				int 21h

			termmmr:

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset SLASH
			int 21h

			;year
			mov ax,year
			add ax,0F830H ; To negate the effects of 16bit value
			AAM
			mov bx,ax

			push bx
			add bh,30h
			mov BUFFER[0],bh
			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset BUFFER
			int 21h
			pop bx

			add bl,30h
			mov BUFFER[0],bl
			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset BUFFER
			int 21h

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset SPACE
			int 21h			

			mov si,0
			nname:
				mov al,playername[si]
				mov BUFFER[0],al
				cmp al,'$'
				je termnname

				mov ah,40h
				mov bx,HANDLE
				mov cx,1
				mov dx,offset BUFFER 
				int 21h			

				inc si

			jmp nname

			termnname:

			mov ah,40h
			mov bx,HANDLE
			mov cx,1
			mov dx,offset DELIMETER
			int 21h			

			;closing file
			mov ah,3eh
			mov bx,HANDLE
			int 21h
			jc ERROR

		.ENDIF

	mov cx,12
	mov pos,95
	mov si,offset highscoree
	;writing highscore
	ho1:
		push cx

		mov ah,02h
		mov bh,0
		mov dh,14
		mov dl,pos
		int 10h

		mov ah,09h
		mov bh,0
		mov bl,4Fh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		pop cx
		inc pos

	loop ho1	

	mov ax,highscore
	call output

		ret

checkhighscore endp

WormDraw proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeW, bx
	mov bx,0
	mov bx, L_Y
	add ySizeW, bx
	
	mov si,offset worm
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeW	;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeW        ;50+36 = 86; 79		(y-axis)
	JB L1


 		mov xSizeW,46	;Horizontal Length of Dinosaur in X-Axis
		mov ySizeW,22 ;Vertical Length of Dinosaur in Y-Axis

popRegisters
ret
WormDraw endp





WormMove proc

sub xCoordW,1

.IF(xCoordW <= 0)
mov xCoordW,280
.ENDIF

ret


WormMove endp

output proc

		push bx
		push cx
		push dx

		;mov ax,enteredNumber;
		xor cx,cx
		xor dx,dx
		xor bx,bx
		mov bx,10;;;for division

		Sloop1:
		mov dx,0
		div bx
		;mov dl,ah
		push dx
		inc cx
		cmp ax,0
		jne Sloop1

		Sloop2:
		pop dx;;bring latest remaibder back for stack
		add dl,30h;Add 48 to make it normal for output
		mov ah,2
		int 21h
		loop Sloop2;;;will run till cx which is the number of digits
	
		pop dx
		pop cx
		pop bx

		ret
		output endp


		;;;;;;;;;;


ToString proc NEAR C, horz:BYTE,verz:BYTE

		push ax
		push bx
		push cx
		push dx
		push si

		mov ah,02h
		mov dh,verz
		mov dl,horz
		int 10h

		mov ax,Score
		call output

		pop si
		pop dx
		pop cx
		pop bx
		pop ax

		ret
ToString endp

MoveSun proc


sub sunX,1
cmp sunX,0
jle alter1
jne noalter1

alter1:
mov sunX,300

cmp day,1
je N
jne Din

N:
mov day,0
jmp noalter1


Din:
mov day,1

noalter1:


ret

MoveSun endp

gameover proc

	;BIOS Wait/Delay function
	MOV CX, 0FH
	MOV DX, 4240H
	MOV AH, 86H 
	INT 15H

	oouch:
		;;FOR BACKGROUND
		mov ah,06h
		mov al,0
		mov bh,0Fh
		mov cx,0
		mov dx,184fh
		int 10h

		;writing playername
		mov cx,20
		mov al,95
		mov pos,al
		mov si,offset playername
	
		pn1:
			push cx

			mov al,[si]
			cmp al,'$'
			je termpn1

			mov ah,02h
			mov bh,0
			mov dh,8
			mov dl,pos
			int 10h

			mov ah,09h
			mov bh,0
			mov bl,4Fh
			mov cx,1
			mov al,[si]
			int 10h

			inc si
			pop cx
			inc pos

		loop pn1	

		termpn1:

		;writing gameoverr
		mov cx,8
		mov al,95
		mov pos,al
		mov si,offset gameoverr
	
		go1:
			push cx

			mov ah,02h
			mov bh,0
			mov dh,10
			mov dl,pos
			int 10h

			mov ah,09h
			mov bh,0
			mov bl,4Fh
			mov cx,1
			mov al,[si]
			int 10h

			inc si
			pop cx
			inc pos

		loop go1	

		;writing scoree
		mov cx,12
		mov al,95
		mov pos,al
		mov si,offset scoree
	
		so1:
			push cx

			mov ah,02h
			mov bh,0
			mov dh,12
			mov dl,pos
			int 10h

			mov ah,09h
			mov bh,0
			mov bl,4Fh
			mov cx,1
			mov al,[si]
			int 10h

			inc si
			pop cx
			inc pos

		loop so1	

		mov tempsy,12
		INVOKE ToString,pos,tempsy

		call checkhighscore

		.exit

		ret

gameover endp

CheckUFOCollision proc
LOCAL leftx:WORD,rightx:WORD,upy:WORD,downy:WORD

	mov ax,ufoy
	sub ax,20
	mov upy,ax
	
	mov ax,ufoy
	add ax,31
	mov downy,ax
	
	mov ax,ufox
	mov leftx,ax

	mov ax,ufox
	add ax,40
	mov rightx,ax

	;dinox
	mov ax,xCoordD
	add ax,35
	;DinoY
	mov bx,yCoordD

	cmp bx,upy
	jl closeufocheck

	cmp bx,downy
	jg closeufocheck

	cmp ax,leftx
	jl closeufocheck

	cmp ax,rightx
	jg closeufocheck

	mov bl,Lives
	cmp bl,1
	je gameover1

	dec bl
	mov Lives,bl

	contufocheck:

		mov al,boolUFO
		mov al,0
		mov boolUFO,al

		mov ax,280
		mov UFOx,ax

		mov obscount,1
		inc extralives
		mov up,0
		mov down,0
		mov BoolBend,0
		mov yCoordD,138

		explosion:

			;;FOR BACKGROUND
			mov ah,06h
			mov al,0
			mov bh,0Eh
			mov cx,0
			mov dx,184fh
			int 10h


			;writing boom
			mov cx,4
			mov al,90
			mov pos,al
			mov si,offset boom
	
			ee3:
				push cx

				mov ah,02h
				mov bh,0
				mov dh,10
				mov dl,pos
				int 10h

				mov ah,09h
				mov bh,0
				mov bl,0Fh
				mov cx,1
				mov al,[si]
				int 10h

				inc si

				pop cx
				inc pos

			loop ee3

			;BIOS Wait/Delay function
			MOV CX, 04H
			MOV DX, 4240H
			MOV AH, 86H 
			INT 15H

	closeufocheck:

		ret

	gameover1:
	
		call gameover

CheckUFOCollision endp

CheckCactusCollision proc NEAR C, index:WORD
LOCAL leftx:WORD,rightx:WORD,upy:WORD,downy:WORD

	mov ax,cacverty
	mov downy,ax
	sub ax,18
	mov upy,ax
	
	mov si, offset cacleftx
	add si,index
	mov ax,[si]
	mov leftx,ax

	mov si,offset cacrightx
	add si,index
	mov ax,[si]
	mov rightx,ax

	;dinox
	mov ax,xCoordD
	add ax,19
	;DinoY
	mov bx,yCoordD
	add bx,30

	cmp bx,upy
	jl closecheck

	cmp ax,leftx
	jl closecheck

	cmp ax,rightx
	jg closecheck

	mov ax,rightx
	sub ax,leftx
	add ax,3
	add xCoordD,ax

	mov al,Lives
	cmp al,1
	je endgame

	dec al
	mov Lives,al

	mov ax,Score
	cmp ax,0
	je oouch
	dec Score

	mov up,0
	mov down,0
	mov BoolBend,0
	mov yCoordD,138

	oouch:
		;;FOR BACKGROUND
		mov ah,06h
		mov al,0
		mov bh,04h
		mov cx,0
		mov dx,184fh
		int 10h

		;writing ouch
		mov cx,4
		mov al,90
		mov pos,al
		mov si,offset ouch
	
		oo1:
			push cx

			mov ah,02h
			mov bh,0
			mov dh,10
			mov dl,pos
			int 10h

			mov ah,09h
			mov bh,0
			mov bl,0Fh
			mov cx,1
			mov al,[si]
			int 10h

			inc si
			pop cx
			inc pos

		loop oo1

		;BIOS Wait/Delay function
		MOV CX, 04H
		MOV DX, 4240H
		MOV AH, 86H 
		INT 15H

		mov up,0
		mov down,0
		mov yCoordD,138

	closecheck:		

		ret

	endgame:

		call gameover

CheckCactusCollision endp

DinosaurBend proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeDB, bx
	mov bx,0
	mov bx, L_Y
	add ySizeDB, bx
	
	mov si,offset dino3
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeDB		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeDB         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeDB,39	;Horizontal Length of Dinosaur in X-Axis
mov ySizeDB,23

popRegisters
ret
DinosaurBend endp



DinosaurBendN proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeDB, bx
	mov bx,0
	mov bx, L_Y
	add ySizeDB, bx
	
	mov si,offset dino3N
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeDB		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeDB         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeDB,39	;Horizontal Length of Dinosaur in X-Axis
mov ySizeDB,23

popRegisters
ret
DinosaurBendN endp





SunDraw proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeS, bx
	mov bx,0
	mov bx, L_Y
	add ySizeS, bx
	
	mov si,offset sun
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeS		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeS       ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeS,29 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeS,37

popRegisters
ret
SunDraw endp



MoonDraw proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeS, bx
	mov bx,0
	mov bx, L_Y
	add ySizeS, bx
	
	mov si,offset moon
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeS		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeS       ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeS,29 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeS,37

popRegisters
ret
MoonDraw endp



Dinosaur1 proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeD, bx
	mov bx,0
	mov bx, L_Y
	add ySizeD, bx
	
	mov si,offset dino
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeD		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeD         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeD,36 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeD,38

popRegisters
ret
Dinosaur1 endp



Dinosaur1N proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeD, bx
	mov bx,0
	mov bx, L_Y
	add ySizeD, bx
	
	mov si,offset dinoN
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeD		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeD         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeD,36 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeD,38

popRegisters
ret
Dinosaur1N endp


Dinosaur2 proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeD, bx
	mov bx,0
	mov bx, L_Y
	add ySizeD, bx
	
	mov si,offset dino2
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeD		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeD         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeD,36 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeD,38

popRegisters
ret
Dinosaur2 endp


Dinosaur2N proc NEAR C, D_X:WORD,D_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters

mov ax,D_X
mov L_X,ax

mov ax,D_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeD, bx
	mov bx,0
	mov bx, L_Y
	add ySizeD, bx
	
	mov si,offset dino2N
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeD		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeD         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeD,36 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeD,38

popRegisters
ret
Dinosaur2N endp


HeartV2 proc NEAR C, H_X:WORD,H_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters


mov ax,H_X
mov L_X,ax


mov ax,H_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeH, bx
	mov bx,0
	mov bx, L_Y
	add ySizeH, bx
	
	mov si,offset Heart2
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeH		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeH         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeH,20 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeH,19

popRegisters
ret
HeartV2 endp


HeartNight proc NEAR C, H_X:WORD,H_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters


mov ax,H_X
mov L_X,ax


mov ax,H_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeH, bx
	mov bx,0
	mov bx, L_Y
	add ySizeH, bx
	
	mov si,offset Heart3
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeH		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeH         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeH,20 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeH,19

popRegisters
ret
HeartNight endp



CloudNight proc NEAR C, C_X:WORD,C_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters


mov ax,C_X
mov L_X,ax


mov ax,C_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeC, bx
	mov bx,0
	mov bx, L_Y
	add ySizeC, bx
	
	mov si,offset Cloud2
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeC		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeC         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeC,47 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeC,17

popRegisters
ret
CloudNight endp









CloudV2 proc NEAR C, C_X:WORD,C_Y:WORD
LOCAL Plus:WORD,L_X:WORD,L_Y:WORD
pushRegisters


mov ax,C_X
mov L_X,ax


mov ax,C_Y
mov L_Y,ax


	mov bx,0h
	mov bx, L_X
	add xSizeC, bx
	mov bx,0
	mov bx, L_Y
	add ySizeC, bx
	
	mov si,offset Cloud
	mov ah,0CH			
	mov dx,L_Y		; X-Axis = 36, Y-Axis = 36; ; X-Axis = 25, Y-Axis = 29;	;Starting point of Y-Axis = 50		
	L1:
		mov cx, L_X		;Starting point of X-Axis = 100
		L2:
		mov al,[si]
		int 10H
		inc si
		add cx,1
		cmp cx,xSizeC		;100 + 36 = 136; 79 (x-axis)	
		JB L2
	add dx,1
	cmp dx,ySizeC         ;50+36 = 86; 79		(y-axis)
	JB L1


mov  xSizeC,47 	;Horizontal Length of Dinosaur in X-Axis
mov ySizeC,17

popRegisters
ret
CloudV2 endp

ChangeUFOCoords proc

	mov ax,UFOx
	cmp ax,1
	jle resetufo

	dec ax
	dec ax
	dec ax
	dec ax
	dec ax

	mov UFOx,ax
	jmp contufo

	resetufo:

		mov boolUFO,0
		mov ax,280
		mov UFOx,ax

		mov obscount,1
		inc Score
		inc Score
		inc extralives

	contufo:

	ret

ChangeUFOCoords endp

DrawUFO proc

	LOCAL tempx:WORD,tempy:WORD

	;row1
	mov ax,UFOy
	mov tempy,ax
	mov cx,5
	u1:

		push cx
		mov ax,UFOx
		mov tempx,ax
		mov cx,40

		uu1:
			push cx
			DrawPixel tempx,tempy,08h
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu1

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u1

	;row1up
	mov ax,UFOy
	sub ax,5
	mov tempy,ax
	mov cx,5
	u2:

		push cx
		mov ax,UFOx
		add ax,5
		mov tempx,ax
		mov cx,30

		uu2:
			push cx
			DrawPixel tempx,tempy,01h
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu2

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u2

	;row1up2
	mov ax,UFOy
	sub ax,10
	mov tempy,ax
	mov cx,5
	u3:

		push cx
		mov ax,UFOx
		add ax,10
		mov tempx,ax
		mov cx,20

		uu3:
			push cx
			DrawPixel tempx,tempy,01h
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu3

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u3

	;row1up3
	mov ax,UFOy
	sub ax,15
	mov tempy,ax
	mov cx,5
	u4:

		push cx
		mov ax,UFOx
		add ax,15
		mov tempx,ax
		mov cx,10

		uu4:
			push cx
			DrawPixel tempx,tempy,01h
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu4

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u4

	;row1down
	mov ax,UFOy
	add ax,5
	mov tempy,ax
	mov cx,5
	u5:

		push cx
		mov ax,UFOx
		add ax,5
		mov tempx,ax
		mov cx,30

		uu5:
			push cx
			DrawPixel tempx,tempy,07h
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu5

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u5

	;row1down2
	mov ax,UFOy
	add ax,10
	mov tempy,ax
	mov cx,5
	u6:

		push cx
		mov ax,UFOx
		add ax,10
		mov tempx,ax
		mov cx,20

		uu6:
			push cx
			DrawPixel tempx,tempy,07h
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu6

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u6

	;laser1
	mov ax,UFOy
	add ax,18
	mov tempy,ax
	mov cx,3
	u7:

		push cx
		mov ax,UFOx
		add ax,15
		mov tempx,ax
		mov cx,10

		uu7:
			push cx
			DrawPixel tempx,tempy,0Ah
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu7

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u7

	;laser2
	mov ax,UFOy
	add ax,23
	mov tempy,ax
	mov cx,3
	u8:

		push cx
		mov ax,UFOx
		add ax,17
		mov tempx,ax
		mov cx,6

		uu8:
			push cx
			DrawPixel tempx,tempy,0Ah
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu8

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u8

	;laser3
	mov ax,UFOy
	add ax,28
	mov tempy,ax
	mov cx,3
	u9:

		push cx
		mov ax,UFOx
		add ax,19
		mov tempx,ax
		mov cx,2

		uu9:
			push cx
			DrawPixel tempx,tempy,0Ah
			pop cx
			mov ax,tempx
			inc ax
			mov tempx,ax
		loop uu9

		pop cx
		mov ax,tempy
		inc ax
		mov tempy,ax
	loop u9

	ret

DrawUFO endp

ChangeCactusCorrds proc NEAR C, index:WORD

	mov si,offset cacvertx
	add si,index
	mov ax,[si]

	cmp ax,9
	jle RESETCOORDS

	;vert bar
	mov si,offset cacvertx
	add si,index
	mov ax,[si]

	.IF(Score >= 80)
		dec ax
		dec ax
		dec ax
		dec ax
		dec ax
	.ELSEIF(Score >= 60)
		dec ax
		dec ax
		dec ax
		dec ax
	.ELSEIF(Score >= 40)
		dec ax
		dec ax
		dec ax
	.ELSEIF(Score >= 20)
		dec ax
		dec ax
	.ElSE
		dec ax

	.ENDIF

	mov [si],ax

	;right bar
	mov si,offset cacrightx
	add si,index
	mov ax,[si]

	.IF(Score >= 80)
		dec ax
		dec ax
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 60)
		dec ax
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 40)
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 20)
		dec ax
		dec ax

	.ElSE
		dec ax

	.ENDIF

	mov [si],ax

	;left bar
	mov si,offset cacleftx
	add si,index
	mov ax,[si]

	.IF(Score >= 80)
		dec ax
		dec ax
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 60)
		dec ax
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 40)
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 20)
		dec ax
		dec ax

	.ElSE
		dec ax

	.ENDIF

	mov [si],ax

	;mid bar
	mov si,offset cacmidx
	add si,index
	mov ax,[si]

	.IF(Score >= 80)
		dec ax
		dec ax
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 60)
		dec ax
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 40)
		dec ax
		dec ax
		dec ax

	.ELSEIF(Score >= 20)
		dec ax
		dec ax

	.ElSE
		dec ax

	.ENDIF

	mov [si],ax

	jmp ENDCHANGECOORDS

	RESETCOORDS:

		;vert bar
		mov ax,303
		mov si,offset cacvertx
		add si,index
		mov [si],ax

		;right bar
		mov ax,311
		mov si,offset cacrightx
		add si,index
		mov [si],ax

		;left bar
		mov ax,295 
		mov si,offset cacleftx
		add si,index
		mov [si],ax

		;mid bar
		mov ax,305
		mov si,offset cacmidx
		add si,index
		mov [si],ax

		;time for next obstacle
		inc obscount
		inc Score
		inc extralives

	ENDCHANGECOORDS:

		ret

ChangeCactusCorrds endp

DrawCactus proc NEAR C, index:WORD
LOCAL tempx:WORD
LOCAL tempy:WORD

	;coloring left vertical bar
	mov cx,18
	mov si,offset cacvertx
	add si,index
	mov ax,[si]
	mov tempx,ax
	mov ax,cacverty
	mov tempy,ax
	V:
		push cx
		DrawPixel tempx,tempy,04h
		
		mov cx,4
		mov si,offset cacvertx
		add si,index
		mov ax,[si]
		mov tempx,ax
		
		V2:
			push cx
			DrawPixel tempx,tempy,04h
			pop cx

			mov ax,tempx
			inc ax
			mov tempx,ax

		loop V2

		pop cx

		mov ax,tempy
		dec ax
		mov tempy,ax

	loop V

	;coloring mid bar
	mov cx,21
	mov si,offset cacmidx
	add si,index
	mov ax,[si]	
	sub ax,10
	mov tempx,ax
	mov ax,cacmidy
	add ax,3
	mov tempy,ax
	M:
		push cx

		.IF(day==1)
		DrawPixel tempx,tempy,00h
		.ENDIF

		.IF(day==0)
		DrawPixel tempx,tempy,02h
		.ENDIF		

		mov cx,2
		mov ax,cacmidy
		add ax,3
		mov tempy,ax

		M3:
			push cx

			.IF(day==1)
			DrawPixel tempx,tempy,00h
			.ENDIF

			.IF(day==0)
			DrawPixel tempx,tempy,02h
			.ENDIF		
	
			pop cx

			mov ax,tempy
			dec ax
			mov tempy,ax

		loop M3

		pop cx

		mov ax,tempx
		inc ax
		mov tempx,ax

	loop M

	;coloring left Hand
	mov cx,5
	mov si,offset cacleftx
	add si,index
	mov ax,[si]
	mov tempx,ax
	mov ax,cacsidey
	mov tempy,ax
	L:
		push cx

		.IF(day==1)
		DrawPixel tempx,tempy,00h
		.ENDIF

		.IF(day==0)
		DrawPixel tempx,tempy,02h
		.ENDIF		
		
		mov cx,4
		mov si,offset cacleftx
		add si,index
		mov ax,[si]
		mov tempx,ax
	
		L2:
		
			push cx
	
			.IF(day==1)
			DrawPixel tempx,tempy,00h
			.ENDIF

			.IF(day==0)
			DrawPixel tempx,tempy,02h
			.ENDIF		

			pop cx

			mov ax,tempx
			inc ax
			mov tempx,ax

		loop L2

		pop cx

		mov ax,tempy
		dec ax
		mov tempy,ax

	loop L

	;coloring right Hand
	mov cx,5
	mov si,offset cacrightx
	add si,index
	mov ax,[si]
	mov tempx,ax
	mov ax,cacsidey
	mov tempy,ax
	R:
		push cx

		.IF(day==1)
		DrawPixel tempx,tempy,00h
		.ENDIF

		.IF(day==0)
		DrawPixel tempx,tempy,02h
		.ENDIF		
		
		mov cx,4
		mov si,offset cacrightx
		add si,index
		mov ax,[si]
		mov tempx,ax
		R2:
		
			push cx

			.IF(day==1)
			DrawPixel tempx,tempy,00h
			.ENDIF

			.IF(day==0)
			DrawPixel tempx,tempy,02h
			.ENDIF		
	
			pop cx

			mov ax,tempx
			inc ax
			mov tempx,ax

		loop R2

		pop cx

		mov ax,tempy
		dec ax
		mov tempy,ax

	loop R

	ret

DrawCactus endp

checkextralives proc

	.IF(extralives >= 20 && Displayheart == 0)
		mov Displayheart,1
	.ENDIF

	.IF(extralivex <= 3)
		mov Displayheart,0
		mov extralives,0
		mov extralivex,250
		mov extralivey,150
	.ENDIF

	.IF(Displayheart == 1)


		.IF(day==1)
		INVOKE HeartV2,extralivex,extralivey
		dec extralivex
		.ENDIF

		.IF(day==0)
		INVOKE HeartNight,extralivex,extralivey
		dec extralivex
		.ENDIF
	.ENDIF

	;dinox
	mov ax,xCoordD
	add ax,25
	;DinoY
	mov bx,yCoordD
	add bx,25

	.IF(ax >= extralivex)

		.IF(bx >= extralivey && bx <= extralivey+10)

			.IF(Lives < 5 )
				inc Lives
			.ENDIF

			mov Displayheart,0
			mov extralives,0
			mov extralivex,250
			mov extralivey,150

		.ENDIF

	.ENDIF

	ret

checkextralives endp

Menu proc uses ax cx dx bx si

	;Setting Video Mode to Normal
	mov ah,00h
	mov al,2
	int 10h

	mov ax, 1003h
	mov bx, 0
	int 10h

	;mouse show
	mov ax,01h
	int 33h

	;;FOR BACKGROUND
	mov ah,06h
	mov al,0
	mov bh,11110000b
	mov cx,0
	mov dx,184fh
	int 10h

	mov cx,10
	mov pos,34
	mov si,offset name1

	T:
		push cx

		mov ah,02h
		mov dh,5
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx

	loop T

	;;;;;;;;;;;;;;;RIGHT DINOSAUR;;;;;;;;;;;;;;;
	Draw 01000000b,2,60,6,78	;head
	Draw 11110000b,3,61,4,63	;eye
	Draw 01000000b,7,60,9,64
	Draw 01000000b,9,60,20,74
	Draw 01000000b,9,74,10,79
	Draw 01000000b,20,60,22,62
	Draw 01000000b,20,72,22,74
	Draw 01000000b,19,53,20,60
	Draw 01000000b,16,53,19,54
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	;;;;;;;;;;;;;;;Left DINOSAUR;;;;;;;;;;;;;;;
	Draw 01000000b,2,1,6,17		;head
	Draw 11110000b,3,14,4,16	;eye
	Draw 01000000b,7,13,9,17	;neck
	Draw 01000000b,9,3,20,17	;body
	Draw 01000000b,9,0,10,3		;arm
	Draw 01000000b,20,15,22,17	;feet
	Draw 01000000b,20,3,22,5	;feet
	Draw 01000000b,19,17,20,24
	Draw 01000000b,16,23,19,24
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	;;;PLAY BOX
	Draw 00110000b,10,30,12,46	
	
	;;Writing play
	mov cx,4
	mov pos,36
	mov si,offset name2
	
	T1:
		push cx

		mov ah,02h
		mov dh,11
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx

	loop T1

	;;;Instruction BOX 
	Draw 10100000b,13,30,15,46
	
	;;Writing Instructions on the box
	mov cx,12
	mov pos,32
	mov si,offset name3
	
	T2:
		push cx

		mov ah,02h
		mov dh,14
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx

	loop T2

	;;;EXIT BOX 
	Draw 01000000b,16,30,18,46

	;;Writing exit
	mov cx,4
	mov pos,36
	mov si,offset name4
	
	T3:
		push cx

		mov ah,02h
		mov dh,17
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx

	loop T3

	ret
	
Menu endp

Play_Screen proc uses ax cx dx bx					

	;;Bringing cursor on top
	mov  dl, 0   ;
	mov  dh, 0   ;
	mov  bh, 0    ;
	mov  ah, 02h  ;
	int  10h

	mov  al, ' '
	mov  bl, 4  ;
	mov  bh, 0    ;
	mov  ah, 0Eh  ;
	int  10h
	

;mov day,0

	.IF(day==1)
	mov ah,06h
	mov al,0h
	mov bh,3h
	mov cx,0
	mov dx,184fh
	int 10h

	INVOKE SunDraw,sunX,50
	INVOKE CloudV2,Cloud1_X,40
	INVOKE CloudV2,Cloud2_X,40
	INVOKE CloudV2,Cloud3_X,40


	;DISPLAYING HEARTS
	mov ch,0
	mov cl,Lives
	mov si,0
	
	Hearts:
		
	INVOKE HeartV2,Heart_Array[si],10

		inc si
	loop Hearts
	

	.ENDIF

	.IF(day==0)
	mov ah,06h
	mov al,0h
	mov bh,0h
	mov cx,0
	mov dx,184fh
	int 10h

	INVOKE MoonDraw,sunX,50
	INVOKE CloudNight,Cloud1_X,40
	INVOKE CloudNight,Cloud2_X,40
	INVOKE CloudNight,Cloud3_X,40


	;DISPLAYING HEARTS
	mov ch,0
	mov cl,Lives
	mov si,0
	
	Hearts1:
		
		INVOKE HeartNight,Heart_Array[si],10

		inc si
	loop Hearts1
	


	.ENDIF



	;;;Ground
	Draw 6h,23,0,24,39
	;;;Grass
	Draw 2h,22,0,22,39
	;;;EXIT BOX 
	Draw 0h,0,36,2,39


	INVOKE WormDraw,xCoordW,176
	call WormMove

	mov cx,4
	mov pos,36
	mov si,offset name5

	P:
		push cx

		mov ah,02h
		mov dh,1
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx
	
	loop P

	;;LIVES
	mov cx,6
	mov pos,0
	mov si,offset name7
	
	P1:
		push cx

		mov ah,02h
		mov dh,1
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx

	loop P1

	;;Score
	mov cx,6
	mov pos,0
	mov si,offset name6
	
	P2:
		push cx

		mov ah,02h
		mov dh,0
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx
	loop P2

	;;Score
	
	.IF(obscount == 7)
	call DrawUFO
	call CheckUFOCollision
	.ENDIF

	.IF(obscount == 7)
	call ChangeUFOCoords
	.ENDIF



	mov ah,2ch
	int 21h
	mov hours,ch
	mov minutes,cl
	mov seconds,dh


	;;;BENDTIME;;;;;
	.IF(BoolBend == 1)

	mov al,seconds
	mov BoolTime,al

	add BoolTime,1

	.IF(BoolTime==59)
	sub BoolTime,59
	.ENDIF

	.ENDIF

	mov al,seconds
	.IF( Up == 1 && al <= BoolTime)
	mov BoolBend,0
	mov BoolTime,0
	.ELSEIF(al <= BoolTime)
	mov BoolBend,1
	.ElSE 
	mov BoolBend,0
	mov BoolTime,0
	.ENDIF

	;;;;;;;;;;;;;;;;;;;;;

	
	call CloudMove
	call MoveSun


	
	

;;;;;;;;;;;;;;;;;;;;;;;;;DINOSAUR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


.IF(day == 1)


cmp BoolBend,0
je Normal
jne Bend


	Normal:


	.IF(yCoordD == 152)
	sub yCoordD,14
	.ENDIF

	.IF(Dbool==0)
	INVOKE Dinosaur1,xCoordD,yCoordD
	mov Dbool,1
	.ELSEIF(Dbool==1)
	INVOKE Dinosaur2,xCoordD,yCoordD
	mov Dbool,0
	.ENDIF
	jmp NCHANGE



	Bend:
	mov yCoordD,152
	INVOKE DinosaurBend,xCoordD,yCoordD
	mov BoolBend,0


	NCHANGE:


.ENDIF	


.IF(day == 0)


cmp BoolBend,0
je Normal1
jne Bend1


	Normal1:


	.IF(yCoordD == 152)
	sub yCoordD,14
	.ENDIF

	.IF(Dbool==0)
	INVOKE Dinosaur1N,xCoordD,yCoordD
	mov Dbool,1
	.ELSEIF(Dbool==1)
	INVOKE Dinosaur2N,xCoordD,yCoordD
	mov Dbool,0
	.ENDIF
	jmp NCHANGE1



	Bend1:
	mov yCoordD,152
	INVOKE DinosaurBendN,xCoordD,yCoordD
	mov BoolBend,0


	NCHANGE1:


.ENDIF	

;;;;;;;;;;;;;;;;;;;;;;;;;DINOSAUR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	;CACTUS
	mov al,obscount
	cmp al,6
	jg contcactuss

	INVOKE DrawCactus,0
	INVOKE CheckCactusCollision,0
	INVOKE ChangeCactusCorrds,0
	INVOKE DrawCactus,2
	INVOKE CheckCactusCollision,2
	INVOKE ChangeCactusCorrds,2

	contcactuss:

	mov tempsx,7
	mov tempsy,0
	INVOKE ToString,tempsx,tempsy

		ret
	
Play_Screen endp

Instruction_Menu proc uses ax cx dx bx

	mov  dl, 0   ;Column
	mov  dh, 0   ;Row
	mov  bh, 0    ;Display page
	mov  ah, 02h  ;SetCursorPosition
	int  10h

	mov  al, ' '
	mov  bl, 4  ;Color is red
	mov  bh, 0    ;Display page
	mov  ah, 0Eh  ;Teletype
	int  10h

	mov ah,0ch
	mov al,0
	int 10h	

	;;FOR BACKGROUND
	mov ah,06h;; al 0h
	mov bh,11100000b
	mov cx,0
	mov dx,184fh
	int 10h

	;;;EXIT BOX 
	Draw 00000000b,0,72,5,79
			
	mov cx,4
	mov pos,74
	mov si,offset name5

	I:
		push cx

		mov ah,02h
		mov dh,3
		mov dl,pos
		int 10h

		mov ah,09h
		mov bl,0eh
		mov cx,1
		mov al,[si]
		int 10h

		inc si
		inc pos

		pop cx

	loop I

	;;CLEARING REGISTERS
	mov  dl, 0   ;Column
	mov  dh, 0   ;Row
	mov  bh, 0    ;Display page
	mov  ah, 02h  ;SetCursorPosition
	int  10h

	mov  al, 0
	mov  bl, 4  ;Color is red
	mov  bh, 0    ;Display page
	mov  ah, 0Eh  ;Teletype
	int  10h

	xor ax,ax
	xor bx,bx
	xor cx,cx
	xor dx,dx

	mov ah,3dh
	lea dx,filename
	mov cl,1
	int 21h
	mov fhandle,ax
					
	;;Reading
	mov bx,ax
	mov cx,206
	mov dx,offset bytesBuffer
	mov ah,3fh
	int 21h

	;;Printing		
	mov cx,198
	mov pos,0
	mov height,0
	mov si,offset bytesBuffer

	I1:
		push cx

		mov dl,[si]
		cmp dl,0dh
		jne noLine

		add si,2
		inc height
		mov pos,0


		noLine:

			mov ah,02h
			mov dh,height
			mov dl,pos
			int 10h

			mov ah,09h
			mov bl,0eh
			mov cx,1
			mov al,[si]
			int 10h

			inc si
			inc pos

			pop cx

	loop I1

	;;Closing File
	mov ah,3eh
	int 21h

	ret
	

Instruction_Menu endp


CloudMove proc

pushRegisters


sub Cloud1_X,1
cmp Cloud1_X,0
je alter1
jne noalter1

alter1:
mov Cloud1_X,265

noalter1:

sub Cloud2_X,1
cmp Cloud2_X,0
je alter2
jne noalter2

alter2:
mov Cloud2_X,265

noalter2:


sub Cloud3_X,1
cmp Cloud3_X,0
je alter3
jne noalter3

alter3:
mov Cloud3_X,265

noalter3:



;sub Cloud2_X,1
;sub Cloud3_X,1

popRegisters
ret
CloudMove endp









main proc

	mov ax,@data
	mov ds,ax

	;enabling all 16 colors
	mov ax, 1003h
	mov bx, 0
	int 10h


;;;;;;;;;;;FOR ENTERING THE NAME;;;;;;;;;;;;;;;;;;;;;;;;


	
	
	Start:

		mov  dl, 0   ;Column
		mov  dh, 0   ;Row
		mov  bh, 0    ;Display page
		mov  ah, 02h  ;SetCursorPosition
		int  10h

		mov  al, ' '
		mov  bl, 4  ;Color is red
		mov  bh, 0    ;Display page
		mov  ah, 0Eh  ;Teletype
		int  10h

	call Menu	
	
	Mouse:

		mov bx,0;
		mov cx,0;
		mov dx,0

		mov ax,3	;MOUSE Interrupt
		int 33h

		cmp bx,2        ;END IF RIGHT CLICK IS PRESSED
		je Mouse_End

		cmp bx,1
		je Compare
		jne End1

		Compare:
		
			XOR ax,ax	;STORING X,Y of MOUSE CLICK INTO mrow and mcol
			mov ax,dx
			xor bx,bx;
			mov bl,8
			div bl
			mov mrow,0
			mov mrow,al

			;;;;COL;;;
			XOR ax,ax;
			mov ax,cx;
			xor bx,bx;
			mov bl,8 ;
			div bl   ;
			mov mcol,0;
			mov mcol,al;

			mov al,mcol
			cmp al,30
			jg Xtest
			jl End1

			Xtest:
			
				cmp al,46
				jl Ytest
				jg End1	

			Ytest:
			
				;xor ax,ax
				mov al,mrow
				cmp al,10
				jg Ytest2
				jl End1

			Ytest2:
			
				cmp al,12
				jle Play
				jg Ytest3

			Ytest3:
		
				cmp al,16
				jl Instruction
				jg Ytest4

			Ytest4:
		
				cmp al,18
				jg End1
		
	.exit

	End1:
	
	jmp Mouse
	
	Mouse_End:
	
	.exit
				
	Instruction:
	
		call Instruction_Menu	

		Mouse3:

			mov bx,0;
			mov cx,0;
			mov dx,0

			;MOUSE Interrupt
			mov ax,3
			int 33h

			cmp bx,2        ;END IF RIGHT CLICK IS PRESSED
			je Mouse3_End

			cmp bx,1
			je Compare3
			jne End3

		Compare3:

			XOR ax,ax	;STORING X,Y of MOUSE CLICK INTO mrow and mcol
			mov ax,dx
			xor bx,bx;
			mov bl,8
			div bl
			mov mrow,0
			mov mrow,al

			;;;;COL;;;
			XOR ax,ax;
			mov ax,cx;
			xor bx,bx;
			mov bl,8 ;
			div bl   ;
			mov mcol,0;
			mov mcol,al;

			mov al,mcol
			cmp al,72
			jg XtestM2
			jl End3

		XtestM2:
					
			cmp al,79
			jl YtestM1
			jg End3

		YtestM1:
					
			;xor ax,ax
			mov al,mrow
			cmp al,0
			jg YtestM2
			jl End3
					
		YtestM2:
					
			cmp al,5
			jle Start
			jg End3
					
		End3:
					
			jmp Mouse3
						
			Mouse3_End:

			Play:





				;;;;;;;;;;;;;;;;;;;FOR NAME INPUT;;;;;;;;;;;;;;;;;;;;
				input:
				MOV CX, 00H
				MOV DX, 424000H
				MOV AH, 86H      ;BIOS Wait/Delay function
				INT 15H


				mov ah,06h;; al 0h
				mov bh,00100000b
				mov cx,0
				mov dx,184fh
				int 10h


				mov cx,23
				mov pos,25
				mov si,offset Disp

				I9:
					push cx

					mov ah,02h
					mov dh,10
					mov dl,pos
					int 10h

					mov ah,09h
					mov bl,0eh
					mov cx,1
					mov al,[si]
					int 10h

					inc si
					inc pos

					pop cx

				loop I9



				;;Bringing cursor on top
				mov  dl, 27   ;
				mov  dh, 15  ;
				mov  bh, 0    ;
				mov  ah, 02h  ;
				int  10h

				mov  al, ' '
				mov  bl, 4  ;
				mov  bh, 0    ;
				mov  ah, 0Eh  ;
				int  10h
	
				mov si,offset PlayerName

				up1:
				mov ah,1
				int 21h
				cmp al,13
				je InputEnd
				mov [si],al
				inc si
				jmp up1



				jmp input

				InputEnd:
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;






				call VideoMode	

			trial:


				MOV CX, 00H
				MOV DX, 424000H
				MOV AH, 86H      ;BIOS Wait/Delay function
				INT 15H
			

				;CHECKS
				;;;MODIFYING THE UP CONDITION
				
				.IF(Up != 0)			
					sub yCoordD,2
					;mov Up,0			
				.ENDIF
				.IF(yCoordD <= 100)
					
					mov Up,0
					mov Down,1
				.ENDIF

				.IF(Down != 0)
					
					add yCoordD,2
				.ENDIF

				.IF(yCoordD == 138)
					
					mov Down,0
				.ENDIF



				;;FOR RIGHT AND LEFT
				.IF(xCoordD <= 0)		
					add xCoordD,40	
				.ENDIF

				.IF(xCoordD >= 275)		
				sub xCoordD,20
				.ENDIF
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				.IF(Up==0 && Down==0)
				mov ah,01h
				int 16h
				.ENDIF

				.IF(al=='w')
				mov Up,1
				jmp NoKey	
				mov BoolBend,0

				.ELSEIF(al=='s')
				mov BoolBend,1
				jmp NoKey	
				
				.ELSEIF(al=='d')				
				je RightKeyPress

				.ELSEIF(al=='a')				
				je LeftKeyPress
				
				.ENDIF
				jmp NoKey


				;;KEYS
				RightKeyPress:
				add xCoordD,20
				mov al,0
				jmp NoKey

				LeftKeyPress:
				sub xCoordD,20
				mov al,0

				NoKey:
				;;;;;;;;;;;;;;;

			
				;;CLEARING BUFFER
				mov ah,0ch  
				mov al,00h            
				int 21h

				call Play_Screen
				call checkextralives

				jmp trial;;MAIN LOOP

				;mouse show
				mov ax,01h
				int 33h	

				;;;IMPLEMENT FUNCTIONALITY HERE
				Mouse2:

				mov bx,0;
				mov cx,0;
				mov dx,0;

				mov ax,3	;MOUSE Interrupt
				int 33h

				cmp bx,2        ;END IF RIGHT CLICK IS PRESSED
				je Mouse2_End

				cmp bx,1
				je Compare2
				jne End2

				Compare2:	

					XOR ax,ax	;STORING X,Y of MOUSE CLICK INTO mrow and mcol
					mov ax,dx
					xor bx,bx;
					mov bl,8
					div bl
					mov mrow,0
					mov mrow,al

					;;;;COL;;;
					XOR ax,ax;
					mov ax,cx;
					xor bx,bx;
					mov bl,8 ;
					div bl   ;
					mov mcol,0;
					mov mcol,al;

					mov al,mcol
					cmp al,72
					jg XtestP2
					jl End3

				XtestP2:
			
					cmp al,79
					jl YtestP1
					jg End3
					YtestP1:
		
					;xor ax,ax
					mov al,mrow
					cmp al,0
					jg YtestP2
					jl End2

				YtestP2:
			
					cmp al,5
					jle Start
					jg End2
			
				End2:
					
					jmp Mouse2
					
	Mouse2_End:

		.exit

main endp
end main